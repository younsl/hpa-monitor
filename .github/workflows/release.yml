name: Release hpa-monitor image and helm chart
run-name: Release hpa-monitor image and helm chart ${{ github.ref_name }}

on:
  push:
    tags:
      - 'hpa-monitor/[0-9]+.[0-9]+.[0-9]+'

env:
  IMAGE_NAME: ${{ github.repository_owner }}/hpa-monitor

jobs:
  set-version:
    runs-on: ubuntu-24.04
    outputs:
      version: ${{ steps.extract.outputs.version }}
    steps:
      - id: extract
        run: echo "version=${GITHUB_REF_NAME#hpa-monitor/}" >> $GITHUB_OUTPUT

  build-container:
    runs-on: ubuntu-24.04
    needs: set-version
    permissions:
      contents: read
      packages: write
    env:
      VERSION: ${{ needs.set-version.outputs.version }}
      IMAGE_DESCRIPTION: "Kubernetes HPA Monitor with real-time dashboard"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.VERSION }}
          # OCI Image Spec:
          # https://github.com/opencontainers/image-spec/blob/main/annotations.md
          labels: |
            maintainer=${{ github.actor }}
            org.opencontainers.image.description=${{ env.IMAGE_DESCRIPTION }}
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Build and push Docker image
        uses: docker/build-push-action@v6.18.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            VERSION=${{ env.VERSION }}
            COMMIT=${{ github.sha }}
          provenance: false
          sbom: false
          outputs: type=image,name=target

  helm-package:
    runs-on: ubuntu-24.04
    needs: [set-version, build-container]
    permissions:
      contents: read
      packages: write
    env:
      VERSION: ${{ needs.set-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Helm
        uses: azure/setup-helm@v4
        with:
          version: 3.14.0

      - name: Update Helm chart version
        run: |
          sed -i "s/^version:.*/version: ${VERSION}/" charts/hpa-monitor/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: ${VERSION}/" charts/hpa-monitor/Chart.yaml

      - name: Package Helm chart
        run: |
          mkdir -p ./helm-charts/
          helm package charts/hpa-monitor --destination ./helm-charts/
      
      - name: Upload Helm chart artifact
        uses: actions/upload-artifact@v4
        with:
          name: helm-chart-tgz
          path: ./helm-charts/hpa-monitor-${{ env.VERSION }}.tgz
          retention-days: 7

  release:
    runs-on: ubuntu-24.04
    needs: [set-version, build-container, helm-package]
    permissions:
      contents: write
    env:
      VERSION: ${{ needs.set-version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download Helm chart artifact
        uses: actions/download-artifact@v4
        with:
          name: helm-chart-tgz
          path: ./helm-chart

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          name: hpa-monitor ${{ env.VERSION }}
          body: |
            ## Summary

            [hpa-monitor](https://github.com/${{ github.repository }}) is a Kubernetes HPA (Horizontal Pod Autoscaler) monitoring application with real-time dashboard and WebSocket updates.

            ## Features

            - **Real-time HPA Monitoring**: WebSocket-based real-time data updates
            - **10% Tolerance Application**: Applies 10% tolerance to min/max replica values
            - **Visual Dashboard**: Clean web UI for HPA status visualization
            - **Multi-namespace Support**: Monitors HPA resources across all namespaces
            - **Status Indicators**: Shows Ready, Scaling, and Stabilization states
            - **Multi-architecture Support**: Available for both amd64 and arm64 platforms

            ## Installation

            hpa-monitor helm chart is available on this release page.

            ### Helm Chart

            Download the `hpa-monitor-${{ env.VERSION }}.tgz` file from the assets below and install it:

            ```bash
            # Download the chart
            curl -L -o hpa-monitor-${{ env.VERSION }}.tgz https://github.com/${{ github.repository }}/releases/download/hpa-monitor-${{ env.VERSION }}/hpa-monitor-${{ env.VERSION }}.tgz

            # Install hpa-monitor from downloaded chart
            helm install hpa-monitor ./hpa-monitor-${{ env.VERSION }}.tgz \
              --namespace hpa-monitor \
              --create-namespace
            ```

            ### Access the Dashboard

            After installation, access the dashboard using port-forward:

            ```bash
            kubectl port-forward svc/hpa-monitor 8080:80 -n hpa-monitor
            ```

            Then open your browser to `http://localhost:8080`

            ### List and Upgrade

            List installed releases:

            ```bash
            helm list -n hpa-monitor
            ```

            If you want to upgrade existing hpa-monitor release:

            ```bash
            helm upgrade hpa-monitor ./hpa-monitor-${{ env.VERSION }}.tgz \
              --namespace hpa-monitor \
              --values <YOUR_VALUES_FILE>.yaml
            ```

            ## Docker Image

            The multi-architecture Docker image is available at:

            ```
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ```

            Supported architectures: `linux/amd64`, `linux/arm64`
          draft: false
          prerelease: false
          generate_release_notes: true
          token: ${{ secrets.GITHUB_TOKEN }}
          files: ./helm-chart/hpa-monitor-${{ env.VERSION }}.tgz