nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image:
  repository: ghcr.io/younsl/hpa-monitor
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ~

imagePullSecrets: []
  # - name: myregistrykey
  # - name: dockerhub-secret

# HPA Monitor specific configuration
config:
  # Tolerance percentage for HPA monitoring (0.0 to 1.0)
  tolerance: 0.1
  # Port for the web server
  port: 8080
  # WebSocket update interval in seconds for HPA status updates
  websocketInterval: 5
  # Log level (debug, info, warn, error, fatal, panic)
  logLevel: "info"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
    # eks.amazonaws.com/role-arn: arn:aws:iam::123456789012:role/MyRole
    # example.com/key: value
  # Labels to add to the service account
  labels: {}
    # team: platform
    # component: monitoring
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # Opt out of API credential auto-mounting
  automountServiceAccountToken: true
  # Image pull secrets for the service account
  imagePullSecrets: []
    # - name: myregistrykey
    # - name: anotherregistrykey

rbac:
  # Specifies whether RBAC resources should be created
  create: true

podAnnotations: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1001
  capabilities:
    drop:
    - ALL

service:
  # Service type - supported values: ClusterIP, NodePort, LoadBalancer, ExternalName
  type: ClusterIP
  port: 80
  targetPort: 8080
  # Optional traffic distribution policy (e.g., "PreferClose")
  # PreferClose: Route to endpoints that are topologically close
  trafficDistribution: ""
  # NodePort configuration (only used when type is NodePort)
  nodePort: 30080
  # Additional annotations for service
  annotations: {}
    # service.beta.kubernetes.io/aws-load-balancer-type: nlb
    # cloud.google.com/load-balancer-type: Internal

ingress:
  enabled: false
  # Use the ingressClassName field to specify the Ingress class(e.g., nginx, traefik)
  className: ""
  # Additional annotations for ingress
  annotations: {}
    ## DEPRECATED: Use spec.ingressClassName instead
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: hpa-monitor.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: hpa-monitor-tls
  #    hosts:
  #      - hpa-monitor.local

resources:
  limits:
    memory: 50Mi
  requests:
    cpu: 20m
    memory: 30Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Topology spread constraints for balanced pod distribution
topologySpreadConstraints: []
  # - maxSkew: 1
  #   topologyKey: topology.kubernetes.io/zone
  #   whenUnsatisfiable: DoNotSchedule
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: hpa-monitor
  # - maxSkew: 1
  #   topologyKey: kubernetes.io/hostname
  #   whenUnsatisfiable: ScheduleAnyway
  #   labelSelector:
  #     matchLabels:
  #       app.kubernetes.io/name: hpa-monitor

# DNS configuration for pods
dnsConfig: {}
  # options:
  #   - name: ndots
  #     value: "2"
  #   - name: edns0
  # nameservers:
  #   - 1.1.1.1
  #   - 8.8.8.8
  # searches:
  #   - my-namespace.svc.cluster.local
  #   - svc.cluster.local

# Probes configuration
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 20
    periodSeconds: 5 
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
    path: /health
    port: 8080
  
  readiness:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
    path: /health
    port: 8080

# Pod Disruption Budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Additional environment variables
env: []
  # - name: CUSTOM_VAR
  #   value: "custom_value"

# Additional volumes
volumes: []
  # - name: custom-volume
  #   configMap:
  #     name: custom-config

# Additional volume mounts
volumeMounts: []
  # - name: custom-volume
  #   mountPath: /custom/path

# Extra labels to add to all resources
extraLabels: {}

# Extra annotations to add to all resources
extraAnnotations: {}
